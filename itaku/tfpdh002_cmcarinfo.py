import pandas as pd
import random
from datetime import datetime, timedelta

def generate_records(start, end):
    records = []

    maker_cd_points_value = ['N0012', 'N0015', 'N0009', 'N0004', 'N0013', 'N0008', 'N0016', 'N0002', 'N0010', 'N0001', 'N0003', 'N0006', 'N0005', 'N0007', 'N0014', 'N0011']
    car_points_value = ['ＷＲＸ　Ｓ４', 'セレナ', 'デュトロ', 'アテンザセダン', 'ビアンテ']
    car_model_points_value = ['VBH', 'FC26', 'XZU600E', 'GJ5FP', 'CCEFW']
    engine_type_points_value = ['FA24E', 'MR20DD', 'N04C', 'PY-VPR', 'LF-VDS']

    for i in range(start, end):
        record = {
            "cm_car_id": random.randint(1, 10000),
            "hjn_num": f"HJN{i:03d}",
            "frame_number": f"FN{i:03d}",
            "itaku_hist": random.choice([True, False]),
            "itk_cmfactory_id": random.randint(170, 200),
            "cm_cst_id": random.choice([random.randint(1, 100)]),
            "parking_id": random.choice([random.randint(1, 60)]),
            "cst_id": random.choice([random.randint(1, 500)]),
            "lowsys_car_key": f"LSCK_{i}",
            "parking_position": f"Pos_{i}",
            "parking_memo": f"P_Memo_{i}",
            "key_memo": f"KeyMemo_{i}",
            "key_memo_2": f"KeyMemo2_{i}",
            "rsv_mh": f"RsvMH_{i}",
            "aprch_mail": random.choice([True, False]),
            "aprch_sms": random.choice([True, False]),
            "aprch_tel_office": random.choice([True, False]),
            "aprch_tel_mobile": random.choice([True, False]),
            "aprch_fax": random.choice([True, False]),
            "aprch_dm": random.choice([True, False]),
            "driver_aprch_flg": random.choice([True, False]),
            "cmtntsh_aprch_flg": random.choice([True, False]),
            "aprch_memo": f"AprchMemo_{i}",
            "nyuk_mtd_schten": f"NyukSchten_{i}",
            "nyuk_mtd_houten": f"NyukHouten_{i}",
            "nyuk_mtd_syaken": f"NyukSyaken_{i}",
            "gosya_num": f"GS_{i}",
            "intrvw_sht_flg": random.choice([True, False]),
            "memo_cst": f"MemoCst_{i}",
            "rec_rgst_dt": (datetime.now() - timedelta(days=random.randint(0, 1000))).isoformat(),
            "rec_updt_dt": datetime.now().isoformat(),
            "rec_updt_id": random.randint(1, 10),
            "car_number1": f"CarNo1_{i}",
            "car_number2": f"CarNo2_{i}",
            "car_number3": f"CarNo3_{i}",
            "car_number4": f"CarNo4_{i}",
            "old_car_number1": f"OldCarNo1_{i}",
            "old_car_number2": f"OldCarNo2_{i}",
            "old_car_number3": f"OldCarNo3_{i}",
            "old_car_number4": f"OldCarNo4_{i}",
            "trok_kohu_dt": (datetime.now() - timedelta(days=random.randint(0, 3650))).date().isoformat(),
            "first_rgst_ym": f"{random.randint(2000,2023)}-{random.randint(1,12):02d}",
            "car_sybt_cd": f"CarSybtCD_{i}",
            "car_sybt": f"CarSybt_{i}",
            "youto_cd": f"YoutoCD_{i}",
            "youto": f"Youto_{i}",
            "jiji_kbn_cd": f"JijiKbnCD_{i}",
            "jiji_kbn": f"JijiKbn_{i}",
            "body_type_cd": f"BodyTypeCD_{i}",
            "body_type": f"BodyType_{i}",
            "car_name_cd": f"CarNameCD_{i}",
            "riding_capacity1": random.randint(1, 100),
            "riding_capacity2": random.randint(1, 100),
            "riding_capacity3": random.randint(1, 100),
            "riding_capacity_kids_flg": random.choice([True, False]),
            "riding_capacity_kids1": random.randint(0, 10),
            "riding_capacity_kids2": random.randint(0, 10),
            "loadage1": random.randint(1000, 100000),
            "loadage2": random.randint(100, 10000),
            "loadage3": random.randint(100, 10000),
            "car_weight1": random.randint(1000, 10000),
            "car_weight2": random.randint(1000, 10000),
            "car_weight_all1": random.randint(1000, 10000),
            "car_weight_all2": random.randint(1000, 10000),
            "car_weight_all3": random.randint(1000, 10000),
            "frame_number_2": f"FN2_{i}",
            "car_length1": random.randint(3000, 7000),
            "car_length2": random.randint(3000, 7000),
            "car_width1": random.randint(1500, 3000),
            "car_width2": random.randint(1500, 3000),
            "car_height1": random.randint(1200, 2500),
            "car_height2": random.randint(1200, 2500),
            "jkjyu_f_f": random.randint(100, 2000),
            "jkjyu_f_r": random.randint(100, 2000),
            "jkjyu_r_f": random.randint(100, 2000),
            "jkjyu_r_r": random.randint(100, 2000),
            "car_model": f"Model_{i}",
            "engine_type": f"Engine_{i}",
            "ventilation": round(random.uniform(1.0, 10.0), 2),
            "rotary_haikiryou": round(random.uniform(1.0, 10.0), 2),
            "rotor_num": random.randint(1, 8),
            "unit": "L",
            "fuel_cd": f"FuelCD_{i}",
            "fuel": f"Fuel_{i}",
            "type_spec_number": f"TypeSpec_{i}",
            "type_kbn_number": f"TypeKbn_{i}",
            "syoyu_nm": f"Owner_{i}",
            "syoyu_kana": f"OwnerKana_{i}",
            "syoyu_nm_cd": f"OwnerCD_{i}",
            "syoyu_ads": f"OwnerAds_{i}",
            "syoyu_ads_code_1": f"AdsCode1_{i}",
            "syoyu_ads_code_2": f"AdsCode2_{i}",
            "syoyu_ads_code_3": f"AdsCode3_{i}",
            "siyo_nm": f"User_{i}",
            "siyo_kana": f"UserKana_{i}",
            "siyo_nm_cd": f"UserCD_{i}",
            "siyo_ads": f"UserAds_{i}",
            "siyo_ads_code_1": f"UserAds1_{i}",
            "siyo_ads_code_2": f"UserAds2_{i}",
            "siyo_ads_code_3": f"UserAds3_{i}",
            "siyo_honkyo": f"UserHonkyo_{i}",
            "siyo_honkyo_ads_code_1": f"UserHonkyoAds1_{i}",
            "siyo_honkyo_ads_code_2": f"UserHonkyoAds2_{i}",
            "siyo_honkyo_ads_code_3": f"UserHonkyoAds3_{i}",
            "inspection_end_dt": (datetime.now() + timedelta(days=random.randint(0, 1000))).date().isoformat(),
            "running_range": random.randint(1000, 100000),
            "running_range_date": (datetime.now() - timedelta(days=random.randint(0, 1000))).date().isoformat(),
            "meter_exchange_flg": random.choice([True, False]),
            "meter_exchange_running_range": random.randint(1000, 100000),
            "meter_exchange_date": (datetime.now() - timedelta(days=random.randint(0, 1000))).date().isoformat(),
            "grade": f"Grade_{i}",
            "car_kbn": f"CarKbn_{i}",
            "kudo_houshiki": f"KudoHoushiki_{i}",
            "shift": f"Shift_{i}",
            "tire_size_s_f": f"TireSF_{i}",
            "tire_size_s_r": f"TireSR_{i}",
            "tire_size_w_f": f"TireWF_{i}",
            "tire_size_w_r": f"TireWR_{i}",
            "plug_num": random.randint(1, 10),
            "engine_oil_no_ele": round(random.uniform(1.0, 5.0), 2),
            "engine_oil_ele": round(random.uniform(1.0, 5.0), 2),
            "mission_oil": round(random.uniform(1.0, 5.0), 2),
            "front_def_oil": round(random.uniform(1.0, 5.0), 2),
            "rear_def_oil": round(random.uniform(1.0, 5.0), 2),
            "battery_size": f"Battery_{i}",
            "lease_motouke_id": f"LeaseM_{i}",
            "tire_type": f"TireType_{i}",
            "body_color": f"Color_{i}",
            "full_car_type": f"FullType_{i}",
            "e_car_id": f"ECar_{i}",
            "e_upload_dt": datetime.now().isoformat(),
            "car_memo_name_1": f"MemoName1_{i}",
            "car_memo_1": f"Memo1_{i}",
            "car_memo_name_2": f"MemoName2_{i}",
            "car_memo_2": f"Memo2_{i}",
            "car_memo_name_3": f"MemoName3_{i}",
            "car_memo_3": f"Memo3_{i}",
            "car_memo_name_4": f"MemoName4_{i}",
            "car_memo_4": f"Memo4_{i}",
            "car_memo_name_5": f"MemoName5_{i}",
            "car_memo_5": f"Memo5_{i}",
            "car_memo_name_6": f"MemoName6_{i}",
            "car_memo_6": f"Memo6_{i}",
            "car_memo_name_7": f"MemoName7_{i}",
            "car_memo_7": f"Memo7_{i}",
            "car_memo_name_8": f"MemoName8_{i}",
            "car_memo_8": f"Memo8_{i}",
            "car_memo_name_9": f"MemoName9_{i}",
            "car_memo_9": f"Memo9_{i}",
            "car_memo_name_10": f"MemoName10_{i}",
            "car_memo_10": f"Memo10_{i}",
            "car_memo_name_11": f"MemoName11_{i}",
            "car_memo_11": f"Memo11_{i}",
            "car_memo_name_12": f"MemoName12_{i}",
            "car_memo_12": f"Memo12_{i}",
            "car_memo_name_13": f"MemoName13_{i}",
            "car_memo_13": f"Memo13_{i}",
            "car_memo_name_14": f"MemoName14_{i}",
            "car_memo_14": f"Memo14_{i}",
            "car_memo_name_15": f"MemoName15_{i}",
            "car_memo_15": f"Memo15_{i}",
            "car_memo_name_16": f"MemoName16_{i}",
            "car_memo_16": f"Memo16_{i}",
            "car_memo_name_17": f"MemoName17_{i}",
            "car_memo_17": f"Memo17_{i}",
            "car_memo_name_18": f"MemoName18_{i}",
            "car_memo_18": f"Memo18_{i}",
            "car_memo_name_19": f"MemoName19_{i}",
            "car_memo_19": f"Memo19_{i}",
            "car_memo_name_20": f"MemoName20_{i}",
            "car_memo_20": f"Memo20_{i}",
            "contract_memo": f"ContractMemo_{i}",
            "car_id": random.randint(1, 10000),
            "input_expand_flg": random.choice([True, False]),
            "rotary_flg": random.choice([True, False]),
            "old_running_range": random.randint(1000, 100000),
            "old_running_range_date": (datetime.now() - timedelta(days=random.randint(0, 1000))).date().isoformat(),
            "ins_memo": f"InsMemo_{i}",
            "custom_parts_name": f"CustomParts_{i}",
            "dealer_name": f"Dealer_{i}",
            "shipper_name": f"Shipper_{i}",
            "car": f"Car_{i}",
            "max_running_range": random.randint(1000, 100000),
            "max_running_range_date": (datetime.now() - timedelta(days=random.randint(0, 1000))).date().isoformat(),
            "cmc_consignor_cd": f"CMCC_{i}",
            "car_name_other": f"OtherName_{i}",
            "body_keijou_parts": f"BodyKeijou_{i}",
            "shashu_cd_parts": f"ShashuCD_{i}",
            "car_points": random.choice(car_points_value),
            "kihon_katashiki_parts": f"KihonKatashiki_{i}",
            "car_model_points": random.choice(car_model_points_value),
            "kudo_houshiki_parts": f"KudoParts_{i}",
            "end_month_parts": f"EndMonth_{i}",
            "soubi_parts": f"SoubiParts_{i}",
            "engine_type_points": random.choice(engine_type_points_value),
            "engine_katashiki_parts": f"EngineKatashiki_{i}",
            "grade_parts": f"GradeParts_{i}",
            "ventilation_parts": round(random.uniform(1.0, 10.0), 2),
            "shift_parts": f"ShiftParts_{i}",
            "start_month_parts": f"StartMonthParts_{i}",
            "del_flg": False,
            "rec_rgst_id": random.randint(1, 10),
            "maker_cd_points": random.choice(maker_cd_points_value),
            "maker_cd_parts": f"MakerCDParts_{i}",
            "catalog_code_parts": f"CatalogCode_{i}",
            "sharyou_seq_parts": random.randint(1, 100),
            "sharyou_no_parts": f"ShashouNo_{i}",
            "ins_type": f"InsType_{i}",
            "rec_updt_name": f"RecUpdtName_{i}",
            "section_id": random.randint(1, 500),
            "car_type": f"CarType_{i}",
        }
        records.append(record)
    return records

if __name__ == "__main__":
    csv_filename = "tfpdh002_cmcarinfo.csv"
    num_records = 3300000
    chunksize = 10000

    open(csv_filename, "w").close()

    for start in range(1, num_records + 1, chunksize):
        end = min(start + chunksize, num_records + 1)
        records = generate_records(start, end)
        df = pd.DataFrame(records)
        mode = "w" if start == 1 else "a"
        header = False
        df.to_csv(csv_filename, index=False, mode=mode, header=header)
        print(f"From {start} to {end - 1}")
